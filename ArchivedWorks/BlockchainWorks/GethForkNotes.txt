This started work was attempt at forking Go-Ethereum node, for pusrposes of divistock development.

core/tx_pool.go - New line after 586, add this:
// Test if sender is one of the verified ones
if tx.To() == nil && tx.Data() != nil && tx.From() != "myAddress" {
  return errors.New("transaction not sent by verified sender: " + tx.From());
}
-
core/types/transaction.go - Cool, check out later
signer/core/validation.go - Edit line 137, to this:
} else if txargs.From != "myAddress" {
  return errors.New("transaction not sent by verified sender: " + txargs.From);
}
-
TODO: Find block transactions verification part
TODO: Build on Ubuntu: https://github.com/ethereum/go-ethereum/wiki/Installation-Instructions-for-Ubuntu
TODO: Wtf is this: https://blog.ethereum.org/2015/07/27/final-steps/
TODO: Genesis block: https://raw.githubusercontent.com/ethereum/genesis_block_generator/master/mk_genesis_block.py

        if tx.To() == nil && tx.Data() != nil {
                txFrom := fmt.Sprintf("%#v", tx);
                return errors.New("transaction not sent by verified sender: " + txFrom);

web3.personal.unlockAccount(web3.personal.listAccounts[1],"", 15000)
eth.sendTransaction({from:eth.accounts[1], to:eth.accounts[0], value: web3.toWei(0.05, "ether")})

Error: transaction not sent by verified sender: &types.Transaction{data:types.txdata{AccountNonce:0x0, Price:(*big.Int)(0xc4204bab00), GasLimit:0x15f90, Recipient:(*common.Address)(0xc420506360), Amount:(*big.Int)(0xc4204baae0), Payload:[]uint8(nil), V:(*big.Int)(0xc4204bace0), R:(*big.Int)(0xc4204bac80), S:(*big.Int)(0xc4204baca0), Hash:(*common.Hash)(nil)}, hash:atomic.Value{v:common.Hash{0xf2, 0xc8, 0xd9, 0x3, 0x83, 0xd0, 0xb0, 0xc, 0x2d, 0xd6, 0xe2, 0xd1, 0x69, 0x10, 0xb9, 0x7e, 0xd8, 0xa9, 0xfa, 0x82, 0xc5, 0xe9, 0xd4, 0x0, 0xa7, 0x10, 0xc0, 0x26, 0x3e, 0xa5, 0x9b, 0x8d}}, size:atomic.Value{v:111}, from:atomic.Value{v:types.sigCache{signer:types.EIP155Signer{chainId:(*big.Int)(0xc4204ba220), chainIdMul:(*big.Int)(0xc42000c320)}, from:common.Address{0x67, 0xec, 0xdb, 0x5, 0x6e, 0xb4, 0xe2, 0x86, 0x8d, 0x9f, 0xd4, 0xb7, 0xa0, 0xa5, 0x92, 0x23, 0xec, 0x40, 0x5e, 0x8d}}}}
